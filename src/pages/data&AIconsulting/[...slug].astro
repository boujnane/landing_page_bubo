---
import { changeLanguage } from "i18next";
import BlogPostLayout from "@/layouts/blog-post.astro";
import { getCollection, type CollectionEntry } from "astro:content";
import { useLocation } from "@/lib/location";

changeLanguage("en");

export async function getStaticPaths() {
    const posts = await getCollection("blog");
    return posts.map((post) => ({
        params: { slug: post.slug },
        props: post,
    }));
}
type Props = CollectionEntry<"blog">;
const posts = await getCollection("blog");
const { lang } = useLocation(Astro.url.pathname);
const getPostSlug = (slug: string) => lang === "fr" ? slug + "-fr" : slug;
// Find the post that matches the current slug and language
const post = posts.find((p) => p.slug === getPostSlug(Astro.params.slug) && p.data.lang === lang);
// Fallback to English if no match
const defaultPost = posts.find((p) => p.slug === getPostSlug(Astro.params.slug) && p.data.lang === "en");
if (!post && !defaultPost) {
    return new Response(null, { status: 404, statusText: "Not found" });
}
if (!post) {
    return new Response(null, { status: 404, statusText: "Not found" });
}
const selectedPost = post || defaultPost;
const { Content } = await selectedPost.render();
---
<BlogPostLayout {...selectedPost}>
	<Content />
</BlogPostLayout>
